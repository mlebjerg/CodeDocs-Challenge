@model CodeDocs_Challenge.Models.Article

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Article</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Language" class="control-label"></label>
                <select class="LanguageSelect" style="width: 100%" multiple="multiple"></select>
                <input type="hidden" asp-for="Language" class="form-control" id="LanguageHidden" />
            </div>
            <label for="ImgBlob" class="control-label">Image URL</label>
            <div class="input-group mb-3">

                <input type="text" class="form-control" id="validateUrl" placeholder="Paste image URL here">
                <div class="input-group-append">
                    <button class="btn btn-primary" id="validateBtn" type="button">Validate</button>
                </div>
                <input type="hidden" asp-for="ImgBlob" id="validatedImgBlob" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="SourceUrl" class="control-label"></label>
                <input asp-for="SourceUrl" class="form-control" />
                <span asp-validation-for="SourceUrl" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="hidden" id="contentMD" asp-for="ContentMD" class="form-control" />
            </div>
            <div class="form-group">
                <input type="hidden" id="contentHtml" asp-for="ContentHtml" class="form-control" />
            </div>

        </form>
    </div>
    <div class="col-md-8">
        <img id="testImg" data-src="holder.js/100px160/" class="pull-right" alt="object-fit: cover;" src="" data-holder-rendered="true" style="height: 160px; width: 100%; display: block; object-fit: scale-down;">
    </div>
</div>


<link href="~/Content/css/select2.css" rel="stylesheet" />
<div id="editor-wrapper" class="container-fluid">
    <div class="row">
        <textarea id="editor" data-ng-model="text" class="col-sm-6 bg-dark text-white ng-valid ng-dirty ng-valid-parse ng-touched ng-empty" style=""></textarea>
        <div id="preview" sd-model-to-html="text" class=" col-sm-6 ng-isolate-scope">
            <div ng-bind-html="trustedHtml" class="ng-binding"></div>
        </div>
    </div>
</div>

<div class="form-group">
    <input onclick="submitJs()" value="Create" class="btn btn-primary" />
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>

<script src="~/js/showdown.min.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    $("#editor").keyup(function () {
        convert();
    });

    $(document).ready(function () {
        $.ajax({
            url: "/Articles/GetProgrammingLanguages",
            success: function (result) {
                var data = result.jsonObject;
                $('.LanguageSelect').select2({
                    data: data
                });
            }
        });

    });

    $("#validateBtn").on("click", function() {
        toDataUrl($("#validateUrl").val(), function(myBase64) {
            $("#testImg").attr("src", myBase64);
            $("#validatedImgBlob").val(myBase64);
        });

    });

    function toDataUrl(url, callback) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function() {
            var reader = new FileReader();
            reader.onloadend = function() {
                callback(reader.result);
            }
            reader.readAsDataURL(xhr.response);
        };
        xhr.open('GET', url);
        xhr.responseType = 'blob';
        xhr.send();
    }

    function convert() {
        var converter = new showdown.Converter(),
            text = $("#editor").val();
        $("#preview").html(converter.makeHtml(text));
    }
    function submitJs() {
        convert();
        $("#LanguageHidden").val(JSON.stringify($(".LanguageSelect").select2("val")));
        debugger;
        $("#contentMD").val($("#editor").val());
        $("#contentHtml").val($("#preview").html());

        document.forms["createForm"].submit();
    }
</script>